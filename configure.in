# Process this file with autoconf to produce a configure script.
AC_INIT(libreiser4/libreiser4.c)
AC_CANONICAL_HOST
AC_PREREQ(2.50)

AH_TEMPLATE([PACKAGE], [Define this to be the name of the package.])
AH_TEMPLATE([VERSION], [Define to the version of the package.])

AH_TEMPLATE([LIBREISER4_MAX_INTERFACE_VERSION], [Define to the max interface version.])
AH_TEMPLATE([LIBREISER4_MIN_INTERFACE_VERSION], [Define to the min interface version.])
AH_TEMPLATE([ENABLE_DEBUG], [Define for enable debug info.])
AH_TEMPLATE([ENABLE_MONOLITHIC], [Define for enable monolotic build.])
AH_TEMPLATE([HAVE_LIBUUID], [Define for enable libuuid using.])
AH_TEMPLATE([HAVE_LIBREADLINE], [Define for enable libreadline using.])

LIBREISER4_MAJOR_VERSION=0
LIBREISER4_MINOR_VERSION=4
LIBREISER4_MICRO_VERSION=10

LIBREISER4_INTERFACE_AGE=0
LIBREISER4_BINARY_AGE=0
LIBREISER4_VERSION=$LIBREISER4_MAJOR_VERSION.$LIBREISER4_MINOR_VERSION.$LIBREISER4_MICRO_VERSION

LT_RELEASE=$LIBREISER4_MAJOR_VERSION.$LIBREISER4_MINOR_VERSION

LT_CURRENT=`expr $LIBREISER4_MICRO_VERSION - $LIBREISER4_INTERFACE_AGE`
LT_REVISION=$LIBREISER4_INTERFACE_AGE
LT_AGE=`expr $LIBREISER4_BINARY_AGE - $LIBREISER4_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

PACKAGE=reiser4progs
VERSION=$LIBREISER4_VERSION

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(LIBREISER4_MAX_INTERFACE_VERSION, $LIBREISER4_BINARY_AGE)
AC_DEFINE_UNQUOTED(LIBREISER4_MIN_INTERFACE_VERSION, $LIBREISER4_INTERFACE_AGE)

# Macro for checking libaal
AC_DEFUN(AC_CHECK_LIBAAL,
[

AC_CHECK_LIB($1, aal_device_open, ,
    [AC_MSG_ERROR([lib$1 not found; install libaal available at \
http://www.namesys.com/pub/libaal])]
$4)

# Check for headers and library
AC_CHECK_HEADER(aal/aal.h, ,
    [AC_MSG_ERROR([<aal/aal.h> not found])] 
$4)

AC_MSG_CHECKING(for lib$1 version = $2)

AC_TRY_LINK_FUNC(libaal_version,,
    AC_MSG_RESULT(failed)
    AC_MSG_ERROR([lib$1 can't execute test]))

# Get major, minor, and micro version from arg MINIMUM-VERSION
libaal_config_major_version=`echo $2 | \
    sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
libaal_config_minor_version=`echo $2 | \
    sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
libaal_config_micro_version=`echo $2 | \
    sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`

# Compare MINIMUM-VERSION with libaal version
AC_TRY_RUN([
#include <stdio.h>
#include <stdlib.h>
#include <aal/aal.h>

int main() {
    const char *version;    
    int major, minor, micro;
	
    if (!(version = libaal_version()))
	exit(1);
		
    if (sscanf(version, "%d.%d.%d", &major, &minor, &micro) != 3) {
	printf("%s, bad version string\n", version);
	exit(1);
    }
	
    if (((major == $libaal_config_major_version) && 
        (minor == $libaal_config_minor_version) && 
        (micro >= $libaal_config_micro_version))) 
    {
	return 0;
    }

    printf("\nAn old version of libaal (%s) was found.\n",
	version);

    printf("You need a version of libaal newer than %d.%d.%d.\n", 
	$libaal_config_major_version, $libaal_config_minor_version, 
	$libaal_config_micro_version);

    printf("You can get it at ftp://ftp.namesys.com/pub/libaal\n");
    return 1;
}
], 
    AC_MSG_RESULT(yes),
    AC_MSG_RESULT(no) ; $4,
    [echo $ac_n "cross compiling; assumed OK... $ac_c"])

# Execute ACTION-IF-FOUND
$3])

AC_ARG_WITH(uuid,
    [  --with-uuid              support uuid generating and checking], ,
        with_uuid=yes
)

# Check for libuuid
if test "$with_uuid" = yes; then
    OLD_LIBS="$LIBS"
    LIBS=""
    AC_CHECK_LIB(uuid, uuid_generate, ,
	AC_MSG_WARN(
libuuid could not be found which is required for the --with-uuid
	)
	with_uuid=no
    )
    UUID_LIBS="$LIBS"
    LIBS="$OLD_LIBS"
fi

AC_SUBST(UUID_LIBS)

AC_ARG_WITH(readline,
    [  --with-readline          support fancy command line editing], ,
        with_readline=yes
)

# Check for termcap
if test "$with_readline" = yes; then
	OLD_LIBS="$LIBS"
	LIBS=""
	AC_SEARCH_LIBS(tgetent, ncurses curses termcap termlib,
		PROGS_LIBS="$PROGS_LIBS $LIBS",
		AC_MSG_WARN(
termcap could not be found which is required for the
--with-readline option (which is enabled by default).
		)
		with_readline=no
	)
	LIBS="$OLD_LIBS"
fi

# Check for readline
if test "$with_readline" = yes; then
    OLD_LIBS="$LIBS"
    LIBS=""
    AC_CHECK_LIB(readline, readline, ,
	    AC_MSG_WARN(
GNU Readline could not be found which is required for the --with-readline
	    )
	    with_readline=no
    )
    PROGS_LIBS="$PROGS_LIBS $LIBS"
    LIBS="$OLD_LIBS"
fi

AC_SUBST(PROGS_LIBS)

AM_ENABLE_SHARED

AC_ARG_WITH(key-policy,
    [  --with-key-policy=POLICY keys in standalone library (large|short|both)]
)
if test x$with_key_policy = x; then
    with_key_policy="large"
fi

AC_ARG_WITH(plugin-dir, 
    [  --with-plugin-dir=PATH   directory plugins will lie in]
)
if test x$with_plugin_dir = x; then
    with_plugin_dir="$libdir/reiser4"
fi

plugindir=$with_plugin_dir
AC_SUBST(plugindir)

AC_ARG_ENABLE(Werror,
    [  --disable-Werror         disable build with gcc -Werror ], ,
	enable_Werror=yes
)

AC_ARG_ENABLE(debug, 
    [  --disable-debug          disable asserts and debug information ], , 
	enable_debug=yes
)

AC_ARG_ENABLE(stand_alone,
    [  --enable-stand-alone     enable stand alone library ], ,
        enable_stand_alone=no
)

AC_ARG_ENABLE(monolithic,
    [  --disable-monolithic     disable including all plugins embeding plugins ], ,
        enable_monolithic=yes
)

AC_ARG_ENABLE(collisions,
    [  --disable-collisions     disable key collisions in stand alone library ], ,
        enable_collisions=yes
)

AC_ARG_ENABLE(plugins_check,
    [  --disable-plugins-check  disable plugins check in stand alone library ], ,
        enable_plugins_check=yes
)

AC_ARG_ENABLE(symlinks,
    [  --disable-symlinks       disable symlinks support in stand alone library ], ,
        enable_symlinks=yes
)

AC_ARG_ENABLE(r5_hash,
    [  --disable-r5-hash        disable r5 hash plugin in stand alone library ], ,
        enable_r5_hash=yes
)

AC_ARG_ENABLE(fnv1_hash,
    [  --disable-fnv1-hash      disable fnv1 hash plugin in stand alone library ], ,
        enable_fnv1_hash=yes
)

AC_ARG_ENABLE(rupasov_hash,
    [  --disable-rupasov-hash   disable rupasov hash plugin in stand alone library ], ,
        enable_rupasov_hash=yes
)

AC_ARG_ENABLE(tea_hash,
    [  --disable-tea-hash       disable tea hash plugin in stand alone library ], ,
        enable_tea_hash=yes
)

# Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_AWK

CFLAGS=""
ALONE_CFLAGS=""
GENERIC_CFLAGS=""

if test x$enable_monolithic = xyes; then
    GENERIC_CFLAGS="-DENABLE_MONOLITHIC"
fi

# make libc threadsafe (not required for us for awhile, but useful other users of
# libreiser4)
GENERIC_CFLAGS="$GENERIC_CFLAGS -D_REENTRANT"

AM_PROG_LIBTOOL

if test "$with_uuid" = yes; then
    AC_CHECK_HEADERS(uuid/uuid.h, ,
	AC_MSG_WARN(
The headers for libuuid could not be found which
are required for the --with-uuid option.
	)
    )
fi

if test "$with_readline" = yes; then
    AC_CHECK_HEADERS(readline/readline.h readline/history.h, ,
	AC_MSG_WARN(
The headers for GNU Readline could not be found which
are required for the --with-readline option.
	)
    )
fi

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([printf.h errno.h fcntl.h mntent.h stdint.h stdlib.h string.h sys/ioctl.h sys/mount.h sys/vfs.h unistd.h])

# Checks for typedefs, structures and compiler characteristics.
AC_C_BIGENDIAN

# Checks for library functions.
if test "$with_readline" = yes; then
    OLD_LIBS="$LIBS"
    LIBS="$LIBS $PROGS_LIBS"
    AC_CHECK_FUNCS(rl_completion_matches)
    LIBS="$OLD_LIBS"
fi

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_CHECK_MEMBERS([struct stat.st_rdev])

# Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_STAT
AC_CHECK_FUNCS([register_printf_function statfs getmntent hasmntopt memset strerror strtol time])

# The options -falign-* are supported by gcc 3.0 or later.
# Probably it is sufficient to only check for -falign-loops.
AC_CACHE_CHECK([whether -falign-loops works], [falign_loop_flag], [
  saved_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="-falign-loops=1"
  AC_TRY_COMPILE(, , [falign_loop_flag=yes], [falign_loop_flag=no])
  CPPFLAGS="$saved_CPPFLAGS"
])
 
# Force no alignment to save space.
if test "x$falign_loop_flag" = xyes; then
  ALIGN_FLAGS="-falign-jumps=1 -falign-loops=1 -falign-functions=1 \
-falign-labels=1 -fomit-frame-pointer -fno-inline -fstrength-reduce"
else
  ALIGN_FLAGS="-malign-jumps=1 -malign-loops=1 -malign-functions=1 \
-malign-labels=1 -momit-frame-pointer -mno-inline -mstrength-reduce"
fi

# Check for libdl, if we are doing dynamic loading
if test x$enable_monolithic = xno; then
    OLD_LIBS="$LIBS"
    LIBS=""
    AC_CHECK_LIB(dl, dlopen, ,
	AC_MSG_ERROR(libdl not found!)
	exit
    )
    LIBREISER4_LIBS="$LIBS"
    LIBS="$OLD_LIBS"
fi
AC_SUBST(LIBREISER4_LIBS)

OLD_LIBS="$LIBS"
LIBS=""
AC_CHECK_LIBAAL(aal, 0.4.8, ,exit)
AAL_LIBS="$LIBS"
LIBS="$OLD_LIBS"

AC_SUBST(AAL_LIBS)

if test x$enable_stand_alone = xyes; then

    OLD_LIBS="$LIBS"
    LIBS=""
    AC_CHECK_LIBAAL(aal-alone, 0.4.8, ,exit)
    AAL_ALONE_LIBS="$LIBS"
    LIBS="$OLD_LIBS"

    AC_SUBST(AAL_ALONE_LIBS)

    if test x$enable_collisions = xyes; then
	COLLISION_CFLAGS="-DENABLE_COLLISIONS"
    fi

    if test x$enable_plugins_check = xyes; then
	PLUGINS_CHECK_CFLAGS="-DENABLE_PLUGINS_CHECK"
    fi

    if test x$enable_symlinks = xyes; then
	SYMLINKS_CFLAGS="-DENABLE_SYMLINKS"
    fi

    if test x$enable_r5_hash = xyes; then
	R5_HASH_CFLAGS="-DENABLE_R5_HASH"
    fi

    if test x$enable_fnv1_hash = xyes; then
	FNV1_HASH_CFLAGS="-DENABLE_FNV1_HASH"
    fi

    if test x$enable_rupasov_hash = xyes; then
	RUPASOV_HASH_CFLAGS="-DENABLE_RUPASOV_HASH"
    fi

    if test x$enable_tea_hash = xyes; then
	TEA_HASH_CFLAGS="-DENABLE_TEA_HASH"
    fi

    if test x$with_key_policy = xlarge; then
	LARGE_KEYS_CFLAGS="-DENABLE_LARGE_KEYS"
    fi

    if test x$with_key_policy = xshort; then
	SHORT_KEYS_CFLAGS="-DENABLE_SHORT_KEYS"
    fi

    if test x$with_key_policy = xboth; then
	LARGE_KEYS_CFLAGS="-DENABLE_LARGE_KEYS"
	SHORT_KEYS_CFLAGS="-DENABLE_SHORT_KEYS"
    fi

    ALONE_CFLAGS="$ALONE_CFLAGS -DENABLE_STAND_ALONE $COLLISION_CFLAGS \
$PLUGINS_CHECK_CFLAGS $SYMLINKS_CFLAGS $R5_HASH_CFLAGS $FNV1_HASH_CFLAGS \
$RUPASOV_HASH_CFLAGS $TEA_HASH_CFLAGS $ALIGN_FLAGS $LARGE_KEYS_CFLAGS $SHORT_KEYS_CFLAGS"
fi

GENERIC_CFLAGS="$GENERIC_CFLAGS -DENABLE_COLLISIONS -DENABLE_PLUGINS_CHECK \
-DENABLE_SYMLINKS -DENABLE_R5_HASH -DENABLE_FNV1_HASH -DENABLE_RUPASOV_HASH \
-DENABLE_TEA_HASH -DENABLE_LARGE_KEYS -DENABLE_SHORT_KEYS"

if test x$enable_debug = xyes; then
    GENERIC_CFLAGS="$GENERIC_CFLAGS -O0 -g"
    ALONE_CFLAGS="$ALONE_CFLAGS -O0 -g"
else
    GENERIC_CFLAGS="$GENERIC_CFLAGS -O2"
    ALONE_CFLAGS="$ALONE_CFLAGS -Os"
fi

CFLAGS="$CFLAGS -W -Wall -Wno-unused"
if test x$enable_Werror = xyes; then
    CFLAGS="$CFLAGS -Werror"
fi

AM_CONDITIONAL(ENABLE_MONOLITHIC, test x$enable_monolithic = xyes)

if test x$enable_monolithic = xno; then
    CFLAGS="$CFLAGS -DPLUGIN_DIR=\\\"$with_plugin_dir\\\""
fi

PLUGIN_LDFLAGS=""
if test x$enable_monolithic = xno; then
    PLUGIN_LDFLAGS="-module -avoid-version"
fi
AC_SUBST(PLUGIN_LDFLAGS)

AM_CONDITIONAL(ENABLE_STAND_ALONE, test x$enable_stand_alone = xyes)

if test x$enable_debug = xyes; then
    AC_DEFINE(ENABLE_DEBUG)
fi

AC_SUBST(ALONE_CFLAGS)
AC_SUBST(GENERIC_CFLAGS)

AC_OUTPUT([
    Makefile
    include/Makefile
    include/aux/Makefile
    include/misc/Makefile
    include/reiser4/Makefile
    include/repair/Makefile
    libmisc/Makefile
    libaux/Makefile
    libreiser4/Makefile
    librepair/Makefile
    plugin/Makefile
    plugin/format/Makefile
    plugin/format/format40/Makefile
    plugin/alloc/Makefile
    plugin/alloc/alloc40/Makefile
    plugin/journal/Makefile
    plugin/journal/journal40/Makefile
    plugin/oid/Makefile
    plugin/oid/oid40/Makefile
    plugin/node/Makefile
    plugin/node/node_short/Makefile
    plugin/node/node_large/Makefile
    plugin/key/Makefile
    plugin/key/key_common/Makefile
    plugin/key/key_short/Makefile
    plugin/key/key_large/Makefile
    plugin/item/Makefile
    plugin/item/body40/Makefile
    plugin/item/nodeptr40/Makefile
    plugin/item/stat40/Makefile
    plugin/item/cde_short/Makefile
    plugin/item/cde_large/Makefile
    plugin/item/tail40/Makefile
    plugin/item/extent40/Makefile
    plugin/object/Makefile
    plugin/object/obj40/Makefile
    plugin/object/dir40/Makefile
    plugin/object/reg40/Makefile
    plugin/object/sym40/Makefile
    plugin/policy/Makefile
    plugin/policy/tails/Makefile
    plugin/policy/extents/Makefile
    plugin/policy/smart/Makefile
    plugin/hash/Makefile
    plugin/hash/r5_hash/Makefile
    plugin/hash/tea_hash/Makefile
    plugin/hash/rupasov_hash/Makefile
    plugin/hash/fnv1_hash/Makefile
    plugin/sdext/Makefile
    plugin/sdext/sdext_unix/Makefile
    plugin/sdext/sdext_lw/Makefile
    plugin/sdext/sdext_lt/Makefile
    plugin/sdext/sdext_symlink/Makefile
    demos/Makefile
    progs/Makefile
    progs/mkfs/Makefile
    progs/fsck/Makefile
    progs/debugfs/Makefile
    progs/measurefs/Makefile
    progs/resizefs/Makefile
    progs/cpfs/Makefile
    debug/Makefile
    doc/Makefile
])

echo
echo Type \'make\' to compile reiser4progs

