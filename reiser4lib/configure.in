# Process this file with autoconf to produce a configure script.
AC_PREREQ(2.50)
AC_INIT(include/reiserfs/reiserfs.h)
AC_CANONICAL_HOST

dnl Versioning
dnl Making releases:
dnl    LIBREISERFS_MICRO_VERSION += 1;
dnl    LIBREISERFS_INTERFACE_AGE += 1;
dnl    LIBREISERFS_BINARY_AGE += 1;
dnl if any functions have been added, set LIBREISERFS_INTERFACE_AGE to 0.
dnl if backwards compatibility has been broken (eg. functions removed,
dnl function signatures changed),
dnl set LIBREISERFS_BINARY_AGE _and_ LIBREISERFS_INTERFACE_AGE to 0.
LIBREISERFS_MAJOR_VERSION=0
LIBREISERFS_MINOR_VERSION=0
LIBREISERFS_MICRO_VERSION=1

LIBREISERFS_INTERFACE_AGE=0
LIBREISERFS_BINARY_AGE=0
LIBREISERFS_VERSION=$LIBREISERFS_MAJOR_VERSION.$LIBREISERFS_MINOR_VERSION.$LIBREISERFS_MICRO_VERSION

LT_RELEASE=$LIBREISERFS_MAJOR_VERSION.$LIBREISERFS_MINOR_VERSION

dnl The most recent interface number that this library implements
LT_CURRENT=`expr $LIBREISERFS_MICRO_VERSION - $LIBREISERFS_INTERFACE_AGE`

dnl The implementation number of the *current* interface
LT_REVISION=$LIBREISERFS_INTERFACE_AGE

dnl The difference between the newest and oldest interfaces that this library implements.       dnl In other words, the library implements all the interface numbers in the range from
dnl number *current age* to *current*
LT_AGE=`expr $LIBREISERFS_BINARY_AGE - $LIBREISERFS_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

PACKAGE=reiser4lib
VERSION=$LIBREISERFS_VERSION

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(LIBREISERFS_MAX_INTERFACE_VERSION, $LIBREISERFS_BINARY_AGE)
AC_DEFINE_UNQUOTED(LIBREISERFS_MIN_INTERFACE_VERSION, $LIBREISERFS_INTERFACE_AGE)

AC_ARG_ENABLE(debug, 
	[  --enable-debug        compile in assertions [default=yes]], , 
		enable_debug=yes
)
if test x$enable_debug = xyes; then
    AC_DEFINE(ENABLE_DEBUG)
fi

AM_ENABLE_SHARED
AM_DISABLE_STATIC

AC_ARG_ENABLE(alone,
	[  --enable-alone        build in alone maner (without libc) [default=no]], ,
	    enable_alone=no
)
if test x$enable_alone = xyes; then
	AC_DEFINE(ENABLE_ALONE)
	AM_DISABLE_SHARED
fi

AC_ARG_ENABLE(Werror,
    [  --enable-Werror       build with gcc -Werror [default=yes]], ,
		enable_Werror=yes
)

AC_ARG_WITH(plugin-dir, 
	[  --with-plugin-dir=PATH where plugins will be placed]
)
if test "x$with_plugin_dir" = "x"; then
	with_plugin_dir="$libdir/reiserfs"
fi

plugindir=$with_plugin_dir
AC_SUBST(plugindir)

LIBREISERFS_LIBS=""
dnl Check for libdl, if we are doing dynamic loading
AC_CHECK_LIB(dl, dlopen, LIBREISERFS_LIBS="$LIBREISERFS_LIBS -ldl",
	AC_MSG_ERROR(libdl not found!)
	exit
)
															
AC_SUBST(LIBREISERFS_LIBS)

dnl make libc threadsafe (not required for us, but useful other users of
dnl libreiserfs)
CFLAGS="$CFLAGS -D_REENTRANT"

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

AC_SYS_LARGEFILE

CFLAGS="$CFLAGS -D_FILE_OFFSET_BITS=${ac_cv_sys_file_offset_bits}"

AM_PROG_LIBTOOL

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([alloca.h argz.h errno.h fcntl.h langinfo.h libintl.h limits.h locale.h malloc.h stddef.h stdlib.h string.h strings.h sys/param.h unistd.h])

dnl Checks for typedefs, structures and compiler characteristics.
AC_C_BIGENDIAN

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MALLOC
AC_CHECK_FUNCS([__argz_count __argz_next __argz_stringify dcgettext getcwd getwd memmove mempcpy memset munmap nl_langinfo setlocale stpcpy strcasecmp strchr strcspn strdup strstr strtoul strsep getopt_long_only])

if test x$enable_debug = xyes; then
	CFLAGS="$CFLAGS -g"
fi

CFLAGS="$CFLAGS -W -Wall -Wno-unused -Wno-switch -Wno-format"
if test x$enable_Werror = xyes; then
	    CFLAGS="$CFLAGS -Werror"
fi

CFLAGS="$CFLAGS -DPLUGIN_DIR=\\\"$with_plugin_dir\\\""

case "$host" in
	*-sun-*)
		AC_DEFINE(loff_t, offset_t)
	;;
esac

AC_OUTPUT([
	Makefile
	include/Makefile
	include/aal/Makefile
	include/reiserfs/Makefile
	libaal/Makefile
	libreiserfs/Makefile
	plugin/Makefile
	plugin/format36/Makefile
	plugin/format40/Makefile
	plugin/journal36/Makefile
	plugin/journal40/Makefile
	plugin/alloc36/Makefile
	plugin/alloc40/Makefile
	plugin/node40/Makefile
	plugin/node36/Makefile
	demos/Makefile
	debug/Makefile
	doc/Makefile
	libreiserfs.spec
])

echo
echo Type \'make\' to compile libreiserfs

